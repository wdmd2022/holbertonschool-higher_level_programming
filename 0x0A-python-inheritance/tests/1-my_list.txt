The ``my_list`` module
==========================

Using ``print_sorted``
---------------------

This is an example test file in text format. First import
``print_sorted`` from the ``1-my_list`` module:
    >>> MyList = __import__('1-my_list').MyList

Let's start off easy and give it an easy list:
    >>> testlist1 = [1, 2, 4, 3]
    >>> MyList.print_sorted(testlist1)
    [1, 2, 3, 4]

Let's continue and give it a list with negative ints:
    >>> testlist2 = [1, -2, 4, 3]
    >>> MyList.print_sorted(testlist2)
    [-2, 1, 3, 4]

Now a list with one thing in it:
    >>> testlist3 = [1]
    >>> MyList.print_sorted(testlist3)
    [1]

Then, an empty list:
    >>> testlist4 = []
    >>> MyList.print_sorted(testlist4)
    []

Let's see how she fares with no list at all:
    >>> MyList.print_sorted()
    Traceback (most recent call last):
    TypeError: print_sorted() missing 1 required positional argument: 'self'

Let's go back and do the easiest test of all, a sorted list:
    >>> testlist5 = [1, 2, 3, 4]
    >>> MyList.print_sorted(testlist5)
    [1, 2, 3, 4]

Now a list with a string:
    >>> testlist6 = ["apple", "banana", 5]
    >>> MyList.print_sorted(testlist6)
    Traceback (most recent call last):
    TypeError: '<' not supported between instances of 'int' and 'str'

Let's ensure that the documentation is there for the module:
    >>> moduledocstring = __import__("1-my_list").__doc__
    >>> len(moduledocstring) > 1
    True
