The ``text_indentation`` module
==========================

Using ``text_indentation``
---------------------

This is an example test file in text format. First import
``text_indentation`` from the ``text_indentation`` module:

    >>> text_indentation = __import__("5-text_indentation").text_indentation

Let's start off easy and give it a cute little size:
    >>> text_indentation(3)
    ###
    ###
    ###

That was terrific! Let's give it an impossibly short size now:
    >>> text_indentation(-4)
    Traceback (most recent call last):
    ValueError: size must be >= 0

Okay, now let's confirm that it sends a TypeError for a negative float:
    >>> text_indentation(-5.77777777777)
    Traceback (most recent call last):
    TypeError: size must be an integer

And now let's try an impossibly large one:
    >>> text_indentation(int(float('inf')))
    Traceback (most recent call last):
    OverflowError: cannot convert float infinity to integer

Let's neglect to give it any argument and see what happens:
    >>> text_indentation()
    Traceback (most recent call last):
    TypeError: text_indentation() missing 1 required positional argument: 'size'

And let's give it too many:
    >>> text_indentation(4, 5, 6)
    Traceback (most recent call last):
    TypeError: text_indentation() takes 1 positional argument but 3 were given
