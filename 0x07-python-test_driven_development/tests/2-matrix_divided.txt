The ``matrix_divided`` module
==========================

Using ``matrix_divided``
---------------------

This is an example test file in text format. First import
``matrix_divided`` from the ``matrix_divided`` module:

    >>> matrix_divided = __import__("2-matrix_divided").matrix_divided

Let's start off easy and give it a good matrix and div to play with:
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> matrix_divided(matrix, 2)
    [[0.5, 1.0, 1.5], [2.0, 2.5, 3.0]]
    >>> matrix
    [[1, 2, 3], [4, 5, 6]]

Let's give it a good matrix and a negative div to play with:
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> matrix_divided(matrix, -2)
    [[-0.5, -1.0, -1.5], [-2.0, -2.5, -3.0]]
    >>> matrix
    [[1, 2, 3], [4, 5, 6]]

Now let's forget to give it a matrix:
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> matrix_divided(2)
    Traceback (most recent call last):
    TypeError: matrix_divided() missing 1 required positional argument: 'div'

Let's try an empty matrix this time:
    >>> matrix = []
    >>> matrix_divided(matrix, 2)
    []

Now let's give it a list with strings:
    >>> matrix = [["cool", "lists", "only"], ["apple", "bike", "car"]]
    >>> matrix_divided(matrix, 3)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Now let's give it a div of zero:
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> matrix_divided(matrix, 0)
    Traceback (most recent call last):
    ZeroDivisionError: division by zero

Now let's give it no arguments:
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> matrix_divided()
    Traceback (most recent call last):
    TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

Now let's give it a non-number div:
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> matrix_divided(matrix, "divisor")
    Traceback (most recent call last):
    TypeError: div must be a number

