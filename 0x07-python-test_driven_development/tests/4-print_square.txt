The ``print_square`` module
==========================

Using ``print_square``
---------------------

This is an example test file in text format. First import
``print_square`` from the ``print_square`` module:

    >>> print_square = __import__("4-print_square").print_square

Let's start off easy and give it a cute little size:
    >>> print_square(3)
    ###
    ###
    ###

That was terrific! Let's give it an impossibly short size now:
    >>> print_square(-4)
    Traceback (most recent call last):
    ValueError: size must be >= 0

Okay, now let's confirm that it sends a TypeError for a negative float:
    >>> print_square(-5.77777777777)
    Traceback (most recent call last):
    TypeError: size must be an integer

And now let's try an impossibly large one:
    >>> print_square(int(float('inf')))
    Traceback (most recent call last):
    OverflowError: cannot convert float infinity to integer

Let's neglect to give it any argument and see what happens:
    >>> print_square()
    Traceback (most recent call last):
    TypeError: print_square() missing 1 required positional argument: 'size'

And let's give it too many:
    >>> print_square(4, 5, 6)
    Traceback (most recent call last):
    TypeError: print_square() takes 1 positional argument but 3 were given
